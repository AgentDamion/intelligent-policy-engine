{"ast":null,"code":"// ui/src/services/websocket.js - Production WebSocket service\nclass WebSocketService{constructor(){this.ws=null;this.listeners=new Map();this.reconnectAttempts=0;this.maxReconnectAttempts=5;this.reconnectDelay=1000;this.isConnecting=false;this.subscriptions=new Set();}getWebSocketUrl(){if(process.env.NODE_ENV==='production'){const protocol=window.location.protocol==='https:'?'wss:':'ws:';return`${protocol}//${window.location.host}/ws`;}else{return'ws://localhost:3000/ws';}}connect(){if(this.isConnecting||this.ws&&this.ws.readyState===WebSocket.OPEN){return Promise.resolve();}this.isConnecting=true;const wsUrl=this.getWebSocketUrl();console.log('🔌 Connecting to WebSocket:',wsUrl);return new Promise((resolve,reject)=>{try{this.ws=new WebSocket(wsUrl);this.ws.onopen=()=>{console.log('✅ WebSocket connected successfully');this.isConnecting=false;this.reconnectAttempts=0;this.reconnectDelay=1000;this.subscriptions.forEach(subscription=>{this.send(subscription.type,subscription.data);});this.emit('connected',true);resolve();};this.ws.onmessage=event=>{try{const data=JSON.parse(event.data);console.log('📨 WebSocket message received:',data.type);this.emit(data.type,data.data||data);}catch(error){console.error('❌ Error parsing WebSocket message:',error);}};this.ws.onclose=event=>{console.log('🔌 WebSocket connection closed:',event.code,event.reason);this.isConnecting=false;this.emit('connected',false);if(event.code!==1000&&this.reconnectAttempts<this.maxReconnectAttempts){this.scheduleReconnect();}};this.ws.onerror=error=>{console.error('❌ WebSocket error:',error);this.isConnecting=false;this.emit('error',error);reject(error);};}catch(error){console.error('❌ Failed to create WebSocket connection:',error);this.isConnecting=false;reject(error);}});}scheduleReconnect(){this.reconnectAttempts++;const delay=Math.min(this.reconnectDelay*Math.pow(2,this.reconnectAttempts-1),30000);console.log(`🔄 Scheduling reconnect attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts} in ${delay}ms`);setTimeout(()=>{if(!this.ws||this.ws.readyState===WebSocket.CLOSED){this.connect().catch(error=>{console.error('❌ Reconnection failed:',error);});}},delay);}send(type){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(this.ws&&this.ws.readyState===WebSocket.OPEN){const message={type,...data};this.ws.send(JSON.stringify(message));console.log('📤 Sent WebSocket message:',type);return true;}else{console.warn('⚠️ WebSocket not connected, cannot send message:',type);return false;}}subscribeToGovernance(){console.log('🔌 Subscribing to governance events...');const message={type:'subscribe_to_governance'};this.subscriptions.add(message);return this.send('subscribe_to_governance');}subscribeToAgents(){console.log('🔌 Subscribing to agent updates...');const message={type:'subscribe_to_agents'};this.subscriptions.add(message);return this.send('subscribe_to_agents');}on(event,callback){if(!this.listeners.has(event)){this.listeners.set(event,[]);}this.listeners.get(event).push(callback);return()=>this.off(event,callback);}off(event,callback){if(this.listeners.has(event)){const callbacks=this.listeners.get(event);const index=callbacks.indexOf(callback);if(index>-1){callbacks.splice(index,1);}}}emit(event,data){if(this.listeners.has(event)){this.listeners.get(event).forEach(callback=>{try{callback(data);}catch(error){console.error('❌ Error in event listener:',error);}});}}isConnected(){return this.ws&&this.ws.readyState===WebSocket.OPEN;}disconnect(){if(this.ws){this.ws.close(1000,'Client disconnect');this.ws=null;}this.subscriptions.clear();this.listeners.clear();}ping(){return this.send('ping');}startHeartbeat(){let interval=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30000;setInterval(()=>{if(this.isConnected()){this.ping();}},interval);}}const webSocketService=new WebSocketService();webSocketService.connect().then(()=>{webSocketService.startHeartbeat();}).catch(error=>{console.log('⚠️ Initial WebSocket connection failed - will retry automatically');});export default webSocketService;","map":{"version":3,"names":["WebSocketService","constructor","ws","listeners","Map","reconnectAttempts","maxReconnectAttempts","reconnectDelay","isConnecting","subscriptions","Set","getWebSocketUrl","process","env","NODE_ENV","protocol","window","location","host","connect","readyState","WebSocket","OPEN","Promise","resolve","wsUrl","console","log","reject","onopen","forEach","subscription","send","type","data","emit","onmessage","event","JSON","parse","error","onclose","code","reason","scheduleReconnect","onerror","delay","Math","min","pow","setTimeout","CLOSED","catch","arguments","length","undefined","message","stringify","warn","subscribeToGovernance","add","subscribeToAgents","on","callback","has","set","get","push","off","callbacks","index","indexOf","splice","isConnected","disconnect","close","clear","ping","startHeartbeat","interval","setInterval","webSocketService","then"],"sources":["C:/Users/dgtow/intelligent-policy-engine/aicomplyr-intelligence/ui/src/services/websocket.js"],"sourcesContent":["// ui/src/services/websocket.js - Production WebSocket service\nclass WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.listeners = new Map();\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 1000;\n    this.isConnecting = false;\n    this.subscriptions = new Set();\n  }\n  \n  getWebSocketUrl() {\n    if (process.env.NODE_ENV === 'production') {\n      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n      return `${protocol}//${window.location.host}/ws`;\n    } else {\n      return 'ws://localhost:3000/ws';\n    }\n  }\n  \n  connect() {\n    if (this.isConnecting || (this.ws && this.ws.readyState === WebSocket.OPEN)) {\n      return Promise.resolve();\n    }\n    this.isConnecting = true;\n    const wsUrl = this.getWebSocketUrl();\n    console.log('🔌 Connecting to WebSocket:', wsUrl);\n    return new Promise((resolve, reject) => {\n      try {\n        this.ws = new WebSocket(wsUrl);\n        this.ws.onopen = () => {\n          console.log('✅ WebSocket connected successfully');\n          this.isConnecting = false;\n          this.reconnectAttempts = 0;\n          this.reconnectDelay = 1000;\n          this.subscriptions.forEach(subscription => {\n            this.send(subscription.type, subscription.data);\n          });\n          this.emit('connected', true);\n          resolve();\n        };\n        this.ws.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            console.log('📨 WebSocket message received:', data.type);\n            this.emit(data.type, data.data || data);\n          } catch (error) {\n            console.error('❌ Error parsing WebSocket message:', error);\n          }\n        };\n        this.ws.onclose = (event) => {\n          console.log('🔌 WebSocket connection closed:', event.code, event.reason);\n          this.isConnecting = false;\n          this.emit('connected', false);\n          if (event.code !== 1000 && this.reconnectAttempts < this.maxReconnectAttempts) {\n            this.scheduleReconnect();\n          }\n        };\n        this.ws.onerror = (error) => {\n          console.error('❌ WebSocket error:', error);\n          this.isConnecting = false;\n          this.emit('error', error);\n          reject(error);\n        };\n      } catch (error) {\n        console.error('❌ Failed to create WebSocket connection:', error);\n        this.isConnecting = false;\n        reject(error);\n      }\n    });\n  }\n  \n  scheduleReconnect() {\n    this.reconnectAttempts++;\n    const delay = Math.min(this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1), 30000);\n    console.log(`🔄 Scheduling reconnect attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts} in ${delay}ms`);\n    setTimeout(() => {\n      if (!this.ws || this.ws.readyState === WebSocket.CLOSED) {\n        this.connect().catch(error => {\n          console.error('❌ Reconnection failed:', error);\n        });\n      }\n    }, delay);\n  }\n  \n  send(type, data = {}) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      const message = { type, ...data };\n      this.ws.send(JSON.stringify(message));\n      console.log('📤 Sent WebSocket message:', type);\n      return true;\n    } else {\n      console.warn('⚠️ WebSocket not connected, cannot send message:', type);\n      return false;\n    }\n  }\n  \n  subscribeToGovernance() {\n    console.log('🔌 Subscribing to governance events...');\n    const message = { type: 'subscribe_to_governance' };\n    this.subscriptions.add(message);\n    return this.send('subscribe_to_governance');\n  }\n  \n  subscribeToAgents() {\n    console.log('🔌 Subscribing to agent updates...');\n    const message = { type: 'subscribe_to_agents' };\n    this.subscriptions.add(message);\n    return this.send('subscribe_to_agents');\n  }\n  \n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n    return () => this.off(event, callback);\n  }\n  \n  off(event, callback) {\n    if (this.listeners.has(event)) {\n      const callbacks = this.listeners.get(event);\n      const index = callbacks.indexOf(callback);\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n  }\n  \n  emit(event, data) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error('❌ Error in event listener:', error);\n        }\n      });\n    }\n  }\n  \n  isConnected() {\n    return this.ws && this.ws.readyState === WebSocket.OPEN;\n  }\n  \n  disconnect() {\n    if (this.ws) {\n      this.ws.close(1000, 'Client disconnect');\n      this.ws = null;\n    }\n    this.subscriptions.clear();\n    this.listeners.clear();\n  }\n  \n  ping() {\n    return this.send('ping');\n  }\n  \n  startHeartbeat(interval = 30000) {\n    setInterval(() => {\n      if (this.isConnected()) {\n        this.ping();\n      }\n    }, interval);\n  }\n}\n\nconst webSocketService = new WebSocketService();\nwebSocketService.connect().then(() => {\n  webSocketService.startHeartbeat();\n}).catch(error => {\n  console.log('⚠️ Initial WebSocket connection failed - will retry automatically');\n});\n\nexport default webSocketService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}