{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const WorkflowContext=/*#__PURE__*/createContext();export const useWorkflow=()=>{const context=useContext(WorkflowContext);if(!context){throw new Error('useWorkflow must be used within a WorkflowProvider');}return context;};export const WorkflowProvider=_ref=>{let{children}=_ref;const[current,setCurrent]=useState(null);const[history,setHistory]=useState([]);const[workflows,setWorkflows]=useState({'agency-tool-submission':{id:'agency-tool-submission',name:'Agency Tool Submission',description:'Agency AI tool submission workflow with enterprise review',agents:['pre-flight','context','policy','conflict-detection','negotiation','audit'],sla_hours:48,auto_distribute:true,requires_human_review:false,status:'idle',progress:0,steps:[{id:'pre-flight',name:'Pre-Flight Check',status:'pending'},{id:'context',name:'Context Analysis',status:'pending'},{id:'policy',name:'Policy Evaluation',status:'pending'},{id:'conflict-detection',name:'Conflict Detection',status:'pending'},{id:'negotiation',name:'Negotiation',status:'pending'},{id:'audit',name:'Audit Trail',status:'pending'}]},'enterprise-policy-creation':{id:'enterprise-policy-creation',name:'Enterprise Policy Creation',description:'Enterprise policy creation with automatic distribution',agents:['context','policy','conflict-detection','audit'],sla_hours:24,auto_distribute:true,requires_human_review:false,status:'idle',progress:0,steps:[{id:'context',name:'Context Analysis',status:'pending'},{id:'policy',name:'Policy Creation',status:'pending'},{id:'conflict-detection',name:'Conflict Detection',status:'pending'},{id:'audit',name:'Audit Trail',status:'pending'}]},'multi-client-conflict-resolution':{id:'multi-client-conflict-resolution',name:'Multi-Client Conflict Resolution',description:'Multi-client conflict resolution with human oversight',agents:['context','conflict-detection','negotiation','audit'],sla_hours:72,auto_distribute:false,requires_human_review:true,status:'idle',progress:0,steps:[{id:'context',name:'Context Analysis',status:'pending'},{id:'conflict-detection',name:'Conflict Detection',status:'pending'},{id:'negotiation',name:'Negotiation',status:'pending'},{id:'audit',name:'Audit Trail',status:'pending'}]},'compliance-audit-workflow':{id:'compliance-audit-workflow',name:'Compliance Audit Workflow',description:'Scheduled compliance audit with automated reporting',agents:['audit','pattern-recognition','policy'],sla_hours:null,auto_distribute:false,requires_human_review:false,status:'idle',progress:0,steps:[{id:'audit',name:'Audit Execution',status:'pending'},{id:'pattern-recognition',name:'Pattern Analysis',status:'pending'},{id:'policy',name:'Policy Review',status:'pending'}]}});const[orchestrationEngine,setOrchestrationEngine]=useState({status:'active',activeWorkflows:0,totalWorkflows:Object.keys(workflows).length,averageProcessingTime:0,successRate:0});useEffect(()=>{// Initialize workflow metrics\nconst initializeMetrics=()=>{const totalWorkflows=Object.keys(workflows).length;const activeWorkflows=Object.values(workflows).filter(w=>w.status==='active').length;const averageProcessingTime=Math.floor(Math.random()*5000)+1000;const successRate=Math.floor(Math.random()*20)+80;setOrchestrationEngine({status:'active',activeWorkflows,totalWorkflows,averageProcessingTime,successRate});};initializeMetrics();},[]);const startWorkflow=(workflowId,input)=>{const workflow=workflows[workflowId];if(!workflow){throw new Error(`Workflow ${workflowId} not found`);}const newWorkflow={...workflow,status:'active',progress:0,startTime:new Date().toISOString(),input,currentStep:0,steps:workflow.steps.map((step,index)=>({...step,status:index===0?'active':'pending'}))};setCurrent(newWorkflow);setWorkflows(prev=>({...prev,[workflowId]:newWorkflow}));// Add to history\nsetHistory(prev=>[newWorkflow,...prev.slice(0,9)]);// Keep last 10\nconsole.log(`🔄 Started workflow: ${workflowId}`,input);return newWorkflow;};const updateWorkflowProgress=(workflowId,progress,currentStep)=>{setWorkflows(prev=>{const workflow=prev[workflowId];if(!workflow)return prev;const updatedWorkflow={...workflow,progress,currentStep,steps:workflow.steps.map((step,index)=>({...step,status:index<currentStep?'completed':index===currentStep?'active':'pending'}))};// Update current if it's the active workflow\nif((current===null||current===void 0?void 0:current.id)===workflowId){setCurrent(updatedWorkflow);}return{...prev,[workflowId]:updatedWorkflow};});};const completeWorkflow=(workflowId,result)=>{setWorkflows(prev=>{const workflow=prev[workflowId];if(!workflow)return prev;const completedWorkflow={...workflow,status:'completed',progress:100,endTime:new Date().toISOString(),result,steps:workflow.steps.map(step=>({...step,status:'completed'}))};// Update current if it's the active workflow\nif((current===null||current===void 0?void 0:current.id)===workflowId){setCurrent(null);}return{...prev,[workflowId]:completedWorkflow};});console.log(`✅ Completed workflow: ${workflowId}`,result);};const pauseWorkflow=workflowId=>{setWorkflows(prev=>{const workflow=prev[workflowId];if(!workflow)return prev;const pausedWorkflow={...workflow,status:'paused',pauseTime:new Date().toISOString()};// Update current if it's the active workflow\nif((current===null||current===void 0?void 0:current.id)===workflowId){setCurrent(pausedWorkflow);}return{...prev,[workflowId]:pausedWorkflow};});console.log(`⏸️ Paused workflow: ${workflowId}`);};const resumeWorkflow=workflowId=>{setWorkflows(prev=>{const workflow=prev[workflowId];if(!workflow)return prev;const resumedWorkflow={...workflow,status:'active',resumeTime:new Date().toISOString()};// Update current if it's the active workflow\nsetCurrent(resumedWorkflow);return{...prev,[workflowId]:resumedWorkflow};});console.log(`▶️ Resumed workflow: ${workflowId}`);};const cancelWorkflow=(workflowId,reason)=>{setWorkflows(prev=>{const workflow=prev[workflowId];if(!workflow)return prev;const cancelledWorkflow={...workflow,status:'cancelled',cancelTime:new Date().toISOString(),cancelReason:reason};// Update current if it's the active workflow\nif((current===null||current===void 0?void 0:current.id)===workflowId){setCurrent(null);}return{...prev,[workflowId]:cancelledWorkflow};});console.log(`❌ Cancelled workflow: ${workflowId}`,reason);};const getWorkflow=workflowId=>{return workflows[workflowId];};const getAllWorkflows=()=>{return workflows;};const getActiveWorkflows=()=>{return Object.values(workflows).filter(w=>w.status==='active');};const getWorkflowHistory=()=>{return history;};const getOrchestrationMetrics=()=>{return orchestrationEngine;};const addToHistory=workflow=>{setHistory(prev=>[workflow,...prev.slice(0,9)]);};const clearHistory=()=>{setHistory([]);};const value={current,setCurrent,history,workflows,orchestrationEngine,startWorkflow,updateWorkflowProgress,completeWorkflow,pauseWorkflow,resumeWorkflow,cancelWorkflow,getWorkflow,getAllWorkflows,getActiveWorkflows,getWorkflowHistory,getOrchestrationMetrics,addToHistory,clearHistory};return/*#__PURE__*/_jsx(WorkflowContext.Provider,{value:value,children:children});};export{WorkflowContext};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","WorkflowContext","useWorkflow","context","Error","WorkflowProvider","_ref","children","current","setCurrent","history","setHistory","workflows","setWorkflows","id","name","description","agents","sla_hours","auto_distribute","requires_human_review","status","progress","steps","orchestrationEngine","setOrchestrationEngine","activeWorkflows","totalWorkflows","Object","keys","length","averageProcessingTime","successRate","initializeMetrics","values","filter","w","Math","floor","random","startWorkflow","workflowId","input","workflow","newWorkflow","startTime","Date","toISOString","currentStep","map","step","index","prev","slice","console","log","updateWorkflowProgress","updatedWorkflow","completeWorkflow","result","completedWorkflow","endTime","pauseWorkflow","pausedWorkflow","pauseTime","resumeWorkflow","resumedWorkflow","resumeTime","cancelWorkflow","reason","cancelledWorkflow","cancelTime","cancelReason","getWorkflow","getAllWorkflows","getActiveWorkflows","getWorkflowHistory","getOrchestrationMetrics","addToHistory","clearHistory","value","Provider"],"sources":["C:/Users/dgtow/intelligent-policy-engine/aicomplyr-intelligence/ui/src/contexts/WorkflowContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst WorkflowContext = createContext();\r\n\r\nexport const useWorkflow = () => {\r\n  const context = useContext(WorkflowContext);\r\n  if (!context) {\r\n    throw new Error('useWorkflow must be used within a WorkflowProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const WorkflowProvider = ({ children }) => {\r\n  const [current, setCurrent] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n  const [workflows, setWorkflows] = useState({\r\n    'agency-tool-submission': {\r\n      id: 'agency-tool-submission',\r\n      name: 'Agency Tool Submission',\r\n      description: 'Agency AI tool submission workflow with enterprise review',\r\n      agents: ['pre-flight', 'context', 'policy', 'conflict-detection', 'negotiation', 'audit'],\r\n      sla_hours: 48,\r\n      auto_distribute: true,\r\n      requires_human_review: false,\r\n      status: 'idle',\r\n      progress: 0,\r\n      steps: [\r\n        { id: 'pre-flight', name: 'Pre-Flight Check', status: 'pending' },\r\n        { id: 'context', name: 'Context Analysis', status: 'pending' },\r\n        { id: 'policy', name: 'Policy Evaluation', status: 'pending' },\r\n        { id: 'conflict-detection', name: 'Conflict Detection', status: 'pending' },\r\n        { id: 'negotiation', name: 'Negotiation', status: 'pending' },\r\n        { id: 'audit', name: 'Audit Trail', status: 'pending' }\r\n      ]\r\n    },\r\n    'enterprise-policy-creation': {\r\n      id: 'enterprise-policy-creation',\r\n      name: 'Enterprise Policy Creation',\r\n      description: 'Enterprise policy creation with automatic distribution',\r\n      agents: ['context', 'policy', 'conflict-detection', 'audit'],\r\n      sla_hours: 24,\r\n      auto_distribute: true,\r\n      requires_human_review: false,\r\n      status: 'idle',\r\n      progress: 0,\r\n      steps: [\r\n        { id: 'context', name: 'Context Analysis', status: 'pending' },\r\n        { id: 'policy', name: 'Policy Creation', status: 'pending' },\r\n        { id: 'conflict-detection', name: 'Conflict Detection', status: 'pending' },\r\n        { id: 'audit', name: 'Audit Trail', status: 'pending' }\r\n      ]\r\n    },\r\n    'multi-client-conflict-resolution': {\r\n      id: 'multi-client-conflict-resolution',\r\n      name: 'Multi-Client Conflict Resolution',\r\n      description: 'Multi-client conflict resolution with human oversight',\r\n      agents: ['context', 'conflict-detection', 'negotiation', 'audit'],\r\n      sla_hours: 72,\r\n      auto_distribute: false,\r\n      requires_human_review: true,\r\n      status: 'idle',\r\n      progress: 0,\r\n      steps: [\r\n        { id: 'context', name: 'Context Analysis', status: 'pending' },\r\n        { id: 'conflict-detection', name: 'Conflict Detection', status: 'pending' },\r\n        { id: 'negotiation', name: 'Negotiation', status: 'pending' },\r\n        { id: 'audit', name: 'Audit Trail', status: 'pending' }\r\n      ]\r\n    },\r\n    'compliance-audit-workflow': {\r\n      id: 'compliance-audit-workflow',\r\n      name: 'Compliance Audit Workflow',\r\n      description: 'Scheduled compliance audit with automated reporting',\r\n      agents: ['audit', 'pattern-recognition', 'policy'],\r\n      sla_hours: null,\r\n      auto_distribute: false,\r\n      requires_human_review: false,\r\n      status: 'idle',\r\n      progress: 0,\r\n      steps: [\r\n        { id: 'audit', name: 'Audit Execution', status: 'pending' },\r\n        { id: 'pattern-recognition', name: 'Pattern Analysis', status: 'pending' },\r\n        { id: 'policy', name: 'Policy Review', status: 'pending' }\r\n      ]\r\n    }\r\n  });\r\n\r\n  const [orchestrationEngine, setOrchestrationEngine] = useState({\r\n    status: 'active',\r\n    activeWorkflows: 0,\r\n    totalWorkflows: Object.keys(workflows).length,\r\n    averageProcessingTime: 0,\r\n    successRate: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Initialize workflow metrics\r\n    const initializeMetrics = () => {\r\n      const totalWorkflows = Object.keys(workflows).length;\r\n      const activeWorkflows = Object.values(workflows).filter(w => w.status === 'active').length;\r\n      const averageProcessingTime = Math.floor(Math.random() * 5000) + 1000;\r\n      const successRate = Math.floor(Math.random() * 20) + 80;\r\n\r\n      setOrchestrationEngine({\r\n        status: 'active',\r\n        activeWorkflows,\r\n        totalWorkflows,\r\n        averageProcessingTime,\r\n        successRate\r\n      });\r\n    };\r\n\r\n    initializeMetrics();\r\n  }, []);\r\n\r\n  const startWorkflow = (workflowId, input) => {\r\n    const workflow = workflows[workflowId];\r\n    if (!workflow) {\r\n      throw new Error(`Workflow ${workflowId} not found`);\r\n    }\r\n\r\n    const newWorkflow = {\r\n      ...workflow,\r\n      status: 'active',\r\n      progress: 0,\r\n      startTime: new Date().toISOString(),\r\n      input,\r\n      currentStep: 0,\r\n      steps: workflow.steps.map((step, index) => ({\r\n        ...step,\r\n        status: index === 0 ? 'active' : 'pending'\r\n      }))\r\n    };\r\n\r\n    setCurrent(newWorkflow);\r\n    setWorkflows(prev => ({\r\n      ...prev,\r\n      [workflowId]: newWorkflow\r\n    }));\r\n\r\n    // Add to history\r\n    setHistory(prev => [newWorkflow, ...prev.slice(0, 9)]); // Keep last 10\r\n\r\n    console.log(`🔄 Started workflow: ${workflowId}`, input);\r\n    return newWorkflow;\r\n  };\r\n\r\n  const updateWorkflowProgress = (workflowId, progress, currentStep) => {\r\n    setWorkflows(prev => {\r\n      const workflow = prev[workflowId];\r\n      if (!workflow) return prev;\r\n\r\n      const updatedWorkflow = {\r\n        ...workflow,\r\n        progress,\r\n        currentStep,\r\n        steps: workflow.steps.map((step, index) => ({\r\n          ...step,\r\n          status: index < currentStep ? 'completed' : \r\n                  index === currentStep ? 'active' : 'pending'\r\n        }))\r\n      };\r\n\r\n      // Update current if it's the active workflow\r\n      if (current?.id === workflowId) {\r\n        setCurrent(updatedWorkflow);\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        [workflowId]: updatedWorkflow\r\n      };\r\n    });\r\n  };\r\n\r\n  const completeWorkflow = (workflowId, result) => {\r\n    setWorkflows(prev => {\r\n      const workflow = prev[workflowId];\r\n      if (!workflow) return prev;\r\n\r\n      const completedWorkflow = {\r\n        ...workflow,\r\n        status: 'completed',\r\n        progress: 100,\r\n        endTime: new Date().toISOString(),\r\n        result,\r\n        steps: workflow.steps.map(step => ({\r\n          ...step,\r\n          status: 'completed'\r\n        }))\r\n      };\r\n\r\n      // Update current if it's the active workflow\r\n      if (current?.id === workflowId) {\r\n        setCurrent(null);\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        [workflowId]: completedWorkflow\r\n      };\r\n    });\r\n\r\n    console.log(`✅ Completed workflow: ${workflowId}`, result);\r\n  };\r\n\r\n  const pauseWorkflow = (workflowId) => {\r\n    setWorkflows(prev => {\r\n      const workflow = prev[workflowId];\r\n      if (!workflow) return prev;\r\n\r\n      const pausedWorkflow = {\r\n        ...workflow,\r\n        status: 'paused',\r\n        pauseTime: new Date().toISOString()\r\n      };\r\n\r\n      // Update current if it's the active workflow\r\n      if (current?.id === workflowId) {\r\n        setCurrent(pausedWorkflow);\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        [workflowId]: pausedWorkflow\r\n      };\r\n    });\r\n\r\n    console.log(`⏸️ Paused workflow: ${workflowId}`);\r\n  };\r\n\r\n  const resumeWorkflow = (workflowId) => {\r\n    setWorkflows(prev => {\r\n      const workflow = prev[workflowId];\r\n      if (!workflow) return prev;\r\n\r\n      const resumedWorkflow = {\r\n        ...workflow,\r\n        status: 'active',\r\n        resumeTime: new Date().toISOString()\r\n      };\r\n\r\n      // Update current if it's the active workflow\r\n      setCurrent(resumedWorkflow);\r\n\r\n      return {\r\n        ...prev,\r\n        [workflowId]: resumedWorkflow\r\n      };\r\n    });\r\n\r\n    console.log(`▶️ Resumed workflow: ${workflowId}`);\r\n  };\r\n\r\n  const cancelWorkflow = (workflowId, reason) => {\r\n    setWorkflows(prev => {\r\n      const workflow = prev[workflowId];\r\n      if (!workflow) return prev;\r\n\r\n      const cancelledWorkflow = {\r\n        ...workflow,\r\n        status: 'cancelled',\r\n        cancelTime: new Date().toISOString(),\r\n        cancelReason: reason\r\n      };\r\n\r\n      // Update current if it's the active workflow\r\n      if (current?.id === workflowId) {\r\n        setCurrent(null);\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        [workflowId]: cancelledWorkflow\r\n      };\r\n    });\r\n\r\n    console.log(`❌ Cancelled workflow: ${workflowId}`, reason);\r\n  };\r\n\r\n  const getWorkflow = (workflowId) => {\r\n    return workflows[workflowId];\r\n  };\r\n\r\n  const getAllWorkflows = () => {\r\n    return workflows;\r\n  };\r\n\r\n  const getActiveWorkflows = () => {\r\n    return Object.values(workflows).filter(w => w.status === 'active');\r\n  };\r\n\r\n  const getWorkflowHistory = () => {\r\n    return history;\r\n  };\r\n\r\n  const getOrchestrationMetrics = () => {\r\n    return orchestrationEngine;\r\n  };\r\n\r\n  const addToHistory = (workflow) => {\r\n    setHistory(prev => [workflow, ...prev.slice(0, 9)]);\r\n  };\r\n\r\n  const clearHistory = () => {\r\n    setHistory([]);\r\n  };\r\n\r\n  const value = {\r\n    current,\r\n    setCurrent,\r\n    history,\r\n    workflows,\r\n    orchestrationEngine,\r\n    startWorkflow,\r\n    updateWorkflowProgress,\r\n    completeWorkflow,\r\n    pauseWorkflow,\r\n    resumeWorkflow,\r\n    cancelWorkflow,\r\n    getWorkflow,\r\n    getAllWorkflows,\r\n    getActiveWorkflows,\r\n    getWorkflowHistory,\r\n    getOrchestrationMetrics,\r\n    addToHistory,\r\n    clearHistory\r\n  };\r\n\r\n  return (\r\n    <WorkflowContext.Provider value={value}>\r\n      {children}\r\n    </WorkflowContext.Provider>\r\n  );\r\n};\r\n\r\nexport { WorkflowContext }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}