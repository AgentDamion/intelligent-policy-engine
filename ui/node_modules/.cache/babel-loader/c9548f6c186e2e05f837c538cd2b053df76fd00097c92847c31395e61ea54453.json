{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dgtow\\\\intelligent-policy-engine\\\\aicomplyr-intelligence\\\\ui\\\\src\\\\components\\\\NotificationCenter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './NotificationCenter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationCenter = ({\n  notifications = []\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  useEffect(() => {\n    // Count unread notifications\n    const unread = notifications.filter(n => !n.read).length;\n    setUnreadCount(unread);\n  }, [notifications]);\n  const handleNotificationClick = notification => {\n    // Mark as read\n    notification.read = true;\n    console.log('📧 Notification clicked:', notification);\n  };\n  const markAllAsRead = () => {\n    notifications.forEach(n => n.read = true);\n    setUnreadCount(0);\n    console.log('📧 Marked all notifications as read');\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'success':\n        return '✅';\n      case 'warning':\n        return '⚠️';\n      case 'error':\n        return '❌';\n      case 'info':\n        return 'ℹ️';\n      case 'workflow':\n        return '🔄';\n      case 'agent':\n        return '🤖';\n      default:\n        return '📧';\n    }\n  };\n  const getNotificationColor = type => {\n    switch (type) {\n      case 'success':\n        return 'var(--accent-green)';\n      case 'warning':\n        return 'var(--accent-orange)';\n      case 'error':\n        return 'var(--accent-red)';\n      case 'info':\n        return 'var(--primary-blue)';\n      case 'workflow':\n        return 'var(--accent-purple)';\n      case 'agent':\n        return 'var(--secondary-blue)';\n      default:\n        return 'var(--gray-500)';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-bell\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bell-icon\",\n        children: \"\\uD83D\\uDD14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"notification-title\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-read\",\n          onClick: markAllAsRead,\n          children: \"Mark all read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-notifications\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-notifications-icon\",\n            children: \"\\uD83D\\uDCED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-notifications-text\",\n            children: \"No notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this) : notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read ? 'unread' : ''}`,\n          onClick: () => handleNotificationClick(notification),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-icon\",\n            style: {\n              color: getNotificationColor(notification.type)\n            },\n            children: getNotificationIcon(notification.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"notification-title\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"notification-message\",\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-time\",\n              children: notification.timestamp ? new Date(notification.timestamp).toLocaleTimeString() : 'Just now'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unread-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)]\n        }, notification.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-all-notifications\",\n          children: \"View All Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationCenter, \"JlJg149OEsclqcA7lWVU3lhriH8=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotificationCenter","notifications","_s","isOpen","setIsOpen","unreadCount","setUnreadCount","unread","filter","n","read","length","handleNotificationClick","notification","console","log","markAllAsRead","forEach","getNotificationIcon","type","getNotificationColor","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","color","title","message","timestamp","Date","toLocaleTimeString","id","_c","$RefreshReg$"],"sources":["C:/Users/dgtow/intelligent-policy-engine/aicomplyr-intelligence/ui/src/components/NotificationCenter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './NotificationCenter.css';\r\n\r\nconst NotificationCenter = ({ notifications = [] }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Count unread notifications\r\n    const unread = notifications.filter(n => !n.read).length;\r\n    setUnreadCount(unread);\r\n  }, [notifications]);\r\n\r\n  const handleNotificationClick = (notification) => {\r\n    // Mark as read\r\n    notification.read = true;\r\n    console.log('📧 Notification clicked:', notification);\r\n  };\r\n\r\n  const markAllAsRead = () => {\r\n    notifications.forEach(n => n.read = true);\r\n    setUnreadCount(0);\r\n    console.log('📧 Marked all notifications as read');\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'success': return '✅';\r\n      case 'warning': return '⚠️';\r\n      case 'error': return '❌';\r\n      case 'info': return 'ℹ️';\r\n      case 'workflow': return '🔄';\r\n      case 'agent': return '🤖';\r\n      default: return '📧';\r\n    }\r\n  };\r\n\r\n  const getNotificationColor = (type) => {\r\n    switch (type) {\r\n      case 'success': return 'var(--accent-green)';\r\n      case 'warning': return 'var(--accent-orange)';\r\n      case 'error': return 'var(--accent-red)';\r\n      case 'info': return 'var(--primary-blue)';\r\n      case 'workflow': return 'var(--accent-purple)';\r\n      case 'agent': return 'var(--secondary-blue)';\r\n      default: return 'var(--gray-500)';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-center\">\r\n      {/* Notification Bell */}\r\n      <button \r\n        className=\"notification-bell\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span className=\"bell-icon\">🔔</span>\r\n        {unreadCount > 0 && (\r\n          <span className=\"notification-badge\">{unreadCount}</span>\r\n        )}\r\n      </button>\r\n\r\n      {/* Notification Panel */}\r\n      {isOpen && (\r\n        <div className=\"notification-panel\">\r\n          <div className=\"notification-header\">\r\n            <h3 className=\"notification-title\">Notifications</h3>\r\n            {unreadCount > 0 && (\r\n              <button \r\n                className=\"mark-all-read\"\r\n                onClick={markAllAsRead}\r\n              >\r\n                Mark all read\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"notification-list\">\r\n            {notifications.length === 0 ? (\r\n              <div className=\"no-notifications\">\r\n                <span className=\"no-notifications-icon\">📭</span>\r\n                <p className=\"no-notifications-text\">No notifications</p>\r\n              </div>\r\n            ) : (\r\n              notifications.map((notification, index) => (\r\n                <div\r\n                  key={notification.id || index}\r\n                  className={`notification-item ${!notification.read ? 'unread' : ''}`}\r\n                  onClick={() => handleNotificationClick(notification)}\r\n                >\r\n                  <div \r\n                    className=\"notification-icon\"\r\n                    style={{ color: getNotificationColor(notification.type) }}\r\n                  >\r\n                    {getNotificationIcon(notification.type)}\r\n                  </div>\r\n                  \r\n                  <div className=\"notification-content\">\r\n                    <h4 className=\"notification-title\">{notification.title}</h4>\r\n                    <p className=\"notification-message\">{notification.message}</p>\r\n                    <span className=\"notification-time\">\r\n                      {notification.timestamp ? \r\n                        new Date(notification.timestamp).toLocaleTimeString() : \r\n                        'Just now'\r\n                      }\r\n                    </span>\r\n                  </div>\r\n\r\n                  {!notification.read && (\r\n                    <div className=\"unread-indicator\"></div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {notifications.length > 0 && (\r\n            <div className=\"notification-footer\">\r\n              <button className=\"view-all-notifications\">\r\n                View All Notifications\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationCenter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}