{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./PolicyDistributionDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PolicyDistributionDashboard=()=>{var _dashboard$distributi,_dashboard$distributi2,_dashboard$compliance,_dashboard$compliance2,_dashboard$conflicts;const[activeTab,setActiveTab]=useState('distributions');const[distributions,setDistributions]=useState([]);const[compliance,setCompliance]=useState([]);const[conflicts,setConflicts]=useState([]);const[dashboard,setDashboard]=useState({});const[loading,setLoading]=useState(false);const[showDistributeModal,setShowDistributeModal]=useState(false);const[selectedPolicy,setSelectedPolicy]=useState(null);const[agencies,setAgencies]=useState([]);useEffect(()=>{fetchDashboard();fetchDistributions();},[]);const fetchDashboard=async()=>{try{const response=await fetch('/api/policy-distribution/dashboard',{headers:{'Authorization':`Bearer ${localStorage.getItem('access_token')}`}});if(response.ok){const data=await response.json();setDashboard(data);}}catch(error){console.error('Error fetching dashboard:',error);}};const fetchDistributions=async()=>{setLoading(true);try{const response=await fetch('/api/policy-distribution/distributions',{headers:{'Authorization':`Bearer ${localStorage.getItem('access_token')}`}});if(response.ok){const data=await response.json();setDistributions(data);}}catch(error){console.error('Error fetching distributions:',error);}finally{setLoading(false);}};const fetchCompliance=async agencyId=>{try{const response=await fetch(`/api/policy-distribution/compliance/${agencyId}`,{headers:{'Authorization':`Bearer ${localStorage.getItem('access_token')}`}});if(response.ok){const data=await response.json();setCompliance(data);}}catch(error){console.error('Error fetching compliance:',error);}};const fetchConflicts=async agencyId=>{try{const response=await fetch(`/api/policy-distribution/conflicts/${agencyId}`,{headers:{'Authorization':`Bearer ${localStorage.getItem('access_token')}`}});if(response.ok){const data=await response.json();setConflicts(data);}}catch(error){console.error('Error fetching conflicts:',error);}};const handleDistributePolicy=async(policyId,agencyIds)=>{try{const response=await fetch('/api/policy-distribution/distribute',{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('access_token')}`},body:JSON.stringify({policy_id:policyId,agency_ids:agencyIds})});if(response.ok){const result=await response.json();alert(`Policy distributed to ${result.distributions.length} agencies`);fetchDistributions();setShowDistributeModal(false);}}catch(error){console.error('Error distributing policy:',error);alert('Failed to distribute policy');}};const handleAcknowledgeDistribution=async distributionId=>{try{const response=await fetch(`/api/policy-distribution/distributions/${distributionId}/acknowledge`,{method:'POST',headers:{'Authorization':`Bearer ${localStorage.getItem('access_token')}`}});if(response.ok){fetchDistributions();}}catch(error){console.error('Error acknowledging distribution:',error);}};const getStatusColor=status=>{switch(status){case'active':return'green';case'pending':return'orange';case'compliant':return'green';case'non_compliant':return'red';case'unresolved':return'red';case'resolved':return'green';default:return'gray';}};const getSeverityColor=severity=>{switch(severity){case'high':return'red';case'medium':return'orange';case'low':return'yellow';default:return'gray';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"policy-distribution-dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Policy Distribution & Sync Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Distributions\"}),/*#__PURE__*/_jsx(\"p\",{children:((_dashboard$distributi=dashboard.distributions)===null||_dashboard$distributi===void 0?void 0:_dashboard$distributi.total_distributions)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Active Distributions\"}),/*#__PURE__*/_jsx(\"p\",{children:((_dashboard$distributi2=dashboard.distributions)===null||_dashboard$distributi2===void 0?void 0:_dashboard$distributi2.active_distributions)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Compliance Rate\"}),/*#__PURE__*/_jsxs(\"p\",{children:[((_dashboard$compliance=dashboard.compliance)===null||_dashboard$compliance===void 0?void 0:(_dashboard$compliance2=_dashboard$compliance.avg_compliance_score)===null||_dashboard$compliance2===void 0?void 0:_dashboard$compliance2.toFixed(1))||0,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Unresolved Conflicts\"}),/*#__PURE__*/_jsx(\"p\",{children:((_dashboard$conflicts=dashboard.conflicts)===null||_dashboard$conflicts===void 0?void 0:_dashboard$conflicts.unresolved_conflicts)||0})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='distributions'?'active':''}`,onClick:()=>setActiveTab('distributions'),children:\"Policy Distributions\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='compliance'?'active':''}`,onClick:()=>setActiveTab('compliance'),children:\"Compliance Tracking\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab ${activeTab==='conflicts'?'active':''}`,onClick:()=>setActiveTab('conflicts'),children:\"Policy Conflicts\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[activeTab==='distributions'&&/*#__PURE__*/_jsxs(\"div\",{className:\"distributions-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Policy Distributions\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:()=>setShowDistributeModal(true),children:\"Distribute Policy\"})]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading distributions...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"distributions-list\",children:distributions.map(distribution=>/*#__PURE__*/_jsxs(\"div\",{className:\"distribution-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"distribution-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:distribution.policy_name}),/*#__PURE__*/_jsx(\"span\",{className:`status ${getStatusColor(distribution.distribution_status)}`,children:distribution.distribution_status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"distribution-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Agency:\"}),\" \",distribution.agency_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Version:\"}),\" \",distribution.version_number]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Distributed:\"}),\" \",new Date(distribution.distributed_at).toLocaleDateString()]}),distribution.acknowledged_at&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Acknowledged:\"}),\" \",new Date(distribution.acknowledged_at).toLocaleDateString()]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"distribution-actions\",children:!distribution.acknowledged_at&&/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:()=>handleAcknowledgeDistribution(distribution.id),children:\"Acknowledge\"})})]},distribution.id))})]}),activeTab==='compliance'&&/*#__PURE__*/_jsxs(\"div\",{className:\"compliance-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Compliance Tracking\"}),/*#__PURE__*/_jsx(\"div\",{className:\"compliance-list\",children:compliance.map(record=>/*#__PURE__*/_jsxs(\"div\",{className:\"compliance-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"compliance-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:record.policy_name}),/*#__PURE__*/_jsx(\"span\",{className:`status ${getStatusColor(record.compliance_status)}`,children:record.compliance_status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"compliance-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Enterprise:\"}),\" \",record.enterprise_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Compliance Score:\"}),\" \",record.compliance_score,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Violations:\"}),\" \",record.violations_count]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Last Assessment:\"}),\" \",new Date(record.last_assessment_date).toLocaleDateString()]})]})]},record.id))})]}),activeTab==='conflicts'&&/*#__PURE__*/_jsxs(\"div\",{className:\"conflicts-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Policy Conflicts\"}),/*#__PURE__*/_jsx(\"div\",{className:\"conflicts-list\",children:conflicts.map(conflict=>/*#__PURE__*/_jsxs(\"div\",{className:\"conflict-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"conflict-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:conflict.conflict_type}),/*#__PURE__*/_jsx(\"span\",{className:`severity ${getSeverityColor(conflict.severity)}`,children:conflict.severity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"conflict-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Policy A:\"}),\" \",conflict.policy_a_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Policy B:\"}),\" \",conflict.policy_b_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Description:\"}),\" \",conflict.conflict_description]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",conflict.resolution_status]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Detected:\"}),\" \",new Date(conflict.detected_at).toLocaleDateString()]})]}),conflict.resolution_notes&&/*#__PURE__*/_jsx(\"div\",{className:\"resolution-notes\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Resolution Notes:\"}),\" \",conflict.resolution_notes]})})]},conflict.id))})]})]}),showDistributeModal&&/*#__PURE__*/_jsx(PolicyDistributeModal,{onClose:()=>setShowDistributeModal(false),onDistribute:handleDistributePolicy})]});};const PolicyDistributeModal=_ref=>{let{onClose,onDistribute}=_ref;const[selectedPolicyId,setSelectedPolicyId]=useState('');const[selectedAgencyIds,setSelectedAgencyIds]=useState([]);const[policies,setPolicies]=useState([]);const[agencies,setAgencies]=useState([]);useEffect(()=>{// Mock data - in real app, fetch from API\nsetPolicies([{id:'1',name:'Data Privacy Policy',description:'GDPR compliance requirements'},{id:'2',name:'FDA Compliance Policy',description:'FDA regulatory requirements'},{id:'3',name:'AI Ethics Policy',description:'AI ethics and bias prevention'}]);setAgencies([{id:'1',name:'Digital Marketing Agency A'},{id:'2',name:'Creative Agency B'},{id:'3',name:'Media Agency C'}]);},[]);const handleSubmit=e=>{e.preventDefault();if(selectedPolicyId&&selectedAgencyIds.length>0){onDistribute(selectedPolicyId,selectedAgencyIds);}};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Distribute Policy\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:onClose,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Policy:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedPolicyId,onChange:e=>setSelectedPolicyId(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose a policy...\"}),policies.map(policy=>/*#__PURE__*/_jsx(\"option\",{value:policy.id,children:policy.name},policy.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Agencies:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\",children:agencies.map(agency=>/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:agency.id,checked:selectedAgencyIds.includes(agency.id),onChange:e=>{if(e.target.checked){setSelectedAgencyIds([...selectedAgencyIds,agency.id]);}else{setSelectedAgencyIds(selectedAgencyIds.filter(id=>id!==agency.id));}}}),agency.name]},agency.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-secondary\",onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary\",children:\"Distribute Policy\"})]})]})]})});};export default PolicyDistributionDashboard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","PolicyDistributionDashboard","_dashboard$distributi","_dashboard$distributi2","_dashboard$compliance","_dashboard$compliance2","_dashboard$conflicts","activeTab","setActiveTab","distributions","setDistributions","compliance","setCompliance","conflicts","setConflicts","dashboard","setDashboard","loading","setLoading","showDistributeModal","setShowDistributeModal","selectedPolicy","setSelectedPolicy","agencies","setAgencies","fetchDashboard","fetchDistributions","response","fetch","headers","localStorage","getItem","ok","data","json","error","console","fetchCompliance","agencyId","fetchConflicts","handleDistributePolicy","policyId","agencyIds","method","body","JSON","stringify","policy_id","agency_ids","result","alert","length","handleAcknowledgeDistribution","distributionId","getStatusColor","status","getSeverityColor","severity","className","children","total_distributions","active_distributions","avg_compliance_score","toFixed","unresolved_conflicts","onClick","map","distribution","policy_name","distribution_status","agency_name","version_number","Date","distributed_at","toLocaleDateString","acknowledged_at","id","record","compliance_status","enterprise_name","compliance_score","violations_count","last_assessment_date","conflict","conflict_type","policy_a_name","policy_b_name","conflict_description","resolution_status","detected_at","resolution_notes","PolicyDistributeModal","onClose","onDistribute","_ref","selectedPolicyId","setSelectedPolicyId","selectedAgencyIds","setSelectedAgencyIds","policies","setPolicies","name","description","handleSubmit","e","preventDefault","onSubmit","value","onChange","target","required","policy","agency","type","checked","includes","filter"],"sources":["C:/Users/dgtow/intelligent-policy-engine/aicomplyr-intelligence/ui/src/components/PolicyDistributionDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PolicyDistributionDashboard.css';\r\n\r\nconst PolicyDistributionDashboard = () => {\r\n  const [activeTab, setActiveTab] = useState('distributions');\r\n  const [distributions, setDistributions] = useState([]);\r\n  const [compliance, setCompliance] = useState([]);\r\n  const [conflicts, setConflicts] = useState([]);\r\n  const [dashboard, setDashboard] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [showDistributeModal, setShowDistributeModal] = useState(false);\r\n  const [selectedPolicy, setSelectedPolicy] = useState(null);\r\n  const [agencies, setAgencies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDashboard();\r\n    fetchDistributions();\r\n  }, []);\r\n\r\n  const fetchDashboard = async () => {\r\n    try {\r\n      const response = await fetch('/api/policy-distribution/dashboard', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDashboard(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard:', error);\r\n    }\r\n  };\r\n\r\n  const fetchDistributions = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/policy-distribution/distributions', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDistributions(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching distributions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCompliance = async (agencyId) => {\r\n    try {\r\n      const response = await fetch(`/api/policy-distribution/compliance/${agencyId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCompliance(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching compliance:', error);\r\n    }\r\n  };\r\n\r\n  const fetchConflicts = async (agencyId) => {\r\n    try {\r\n      const response = await fetch(`/api/policy-distribution/conflicts/${agencyId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setConflicts(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching conflicts:', error);\r\n    }\r\n  };\r\n\r\n  const handleDistributePolicy = async (policyId, agencyIds) => {\r\n    try {\r\n      const response = await fetch('/api/policy-distribution/distribute', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        },\r\n        body: JSON.stringify({\r\n          policy_id: policyId,\r\n          agency_ids: agencyIds\r\n        })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(`Policy distributed to ${result.distributions.length} agencies`);\r\n        fetchDistributions();\r\n        setShowDistributeModal(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error distributing policy:', error);\r\n      alert('Failed to distribute policy');\r\n    }\r\n  };\r\n\r\n  const handleAcknowledgeDistribution = async (distributionId) => {\r\n    try {\r\n      const response = await fetch(`/api/policy-distribution/distributions/${distributionId}/acknowledge`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        fetchDistributions();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error acknowledging distribution:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'active': return 'green';\r\n      case 'pending': return 'orange';\r\n      case 'compliant': return 'green';\r\n      case 'non_compliant': return 'red';\r\n      case 'unresolved': return 'red';\r\n      case 'resolved': return 'green';\r\n      default: return 'gray';\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity) => {\r\n    switch (severity) {\r\n      case 'high': return 'red';\r\n      case 'medium': return 'orange';\r\n      case 'low': return 'yellow';\r\n      default: return 'gray';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"policy-distribution-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h1>Policy Distribution & Sync Dashboard</h1>\r\n        <div className=\"dashboard-stats\">\r\n          <div className=\"stat-card\">\r\n            <h3>Total Distributions</h3>\r\n            <p>{dashboard.distributions?.total_distributions || 0}</p>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <h3>Active Distributions</h3>\r\n            <p>{dashboard.distributions?.active_distributions || 0}</p>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <h3>Compliance Rate</h3>\r\n            <p>{dashboard.compliance?.avg_compliance_score?.toFixed(1) || 0}%</p>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <h3>Unresolved Conflicts</h3>\r\n            <p>{dashboard.conflicts?.unresolved_conflicts || 0}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-tabs\">\r\n        <button \r\n          className={`tab ${activeTab === 'distributions' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('distributions')}\r\n        >\r\n          Policy Distributions\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'compliance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('compliance')}\r\n        >\r\n          Compliance Tracking\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'conflicts' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('conflicts')}\r\n        >\r\n          Policy Conflicts\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        {activeTab === 'distributions' && (\r\n          <div className=\"distributions-section\">\r\n            <div className=\"section-header\">\r\n              <h2>Policy Distributions</h2>\r\n              <button \r\n                className=\"btn-primary\"\r\n                onClick={() => setShowDistributeModal(true)}\r\n              >\r\n                Distribute Policy\r\n              </button>\r\n            </div>\r\n            \r\n            {loading ? (\r\n              <div className=\"loading\">Loading distributions...</div>\r\n            ) : (\r\n              <div className=\"distributions-list\">\r\n                {distributions.map((distribution) => (\r\n                  <div key={distribution.id} className=\"distribution-card\">\r\n                    <div className=\"distribution-header\">\r\n                      <h3>{distribution.policy_name}</h3>\r\n                      <span className={`status ${getStatusColor(distribution.distribution_status)}`}>\r\n                        {distribution.distribution_status}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"distribution-details\">\r\n                      <p><strong>Agency:</strong> {distribution.agency_name}</p>\r\n                      <p><strong>Version:</strong> {distribution.version_number}</p>\r\n                      <p><strong>Distributed:</strong> {new Date(distribution.distributed_at).toLocaleDateString()}</p>\r\n                      {distribution.acknowledged_at && (\r\n                        <p><strong>Acknowledged:</strong> {new Date(distribution.acknowledged_at).toLocaleDateString()}</p>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"distribution-actions\">\r\n                      {!distribution.acknowledged_at && (\r\n                        <button \r\n                          className=\"btn-secondary\"\r\n                          onClick={() => handleAcknowledgeDistribution(distribution.id)}\r\n                        >\r\n                          Acknowledge\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'compliance' && (\r\n          <div className=\"compliance-section\">\r\n            <h2>Compliance Tracking</h2>\r\n            <div className=\"compliance-list\">\r\n              {compliance.map((record) => (\r\n                <div key={record.id} className=\"compliance-card\">\r\n                  <div className=\"compliance-header\">\r\n                    <h3>{record.policy_name}</h3>\r\n                    <span className={`status ${getStatusColor(record.compliance_status)}`}>\r\n                      {record.compliance_status}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"compliance-details\">\r\n                    <p><strong>Enterprise:</strong> {record.enterprise_name}</p>\r\n                    <p><strong>Compliance Score:</strong> {record.compliance_score}%</p>\r\n                    <p><strong>Violations:</strong> {record.violations_count}</p>\r\n                    <p><strong>Last Assessment:</strong> {new Date(record.last_assessment_date).toLocaleDateString()}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'conflicts' && (\r\n          <div className=\"conflicts-section\">\r\n            <h2>Policy Conflicts</h2>\r\n            <div className=\"conflicts-list\">\r\n              {conflicts.map((conflict) => (\r\n                <div key={conflict.id} className=\"conflict-card\">\r\n                  <div className=\"conflict-header\">\r\n                    <h3>{conflict.conflict_type}</h3>\r\n                    <span className={`severity ${getSeverityColor(conflict.severity)}`}>\r\n                      {conflict.severity}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"conflict-details\">\r\n                    <p><strong>Policy A:</strong> {conflict.policy_a_name}</p>\r\n                    <p><strong>Policy B:</strong> {conflict.policy_b_name}</p>\r\n                    <p><strong>Description:</strong> {conflict.conflict_description}</p>\r\n                    <p><strong>Status:</strong> {conflict.resolution_status}</p>\r\n                    <p><strong>Detected:</strong> {new Date(conflict.detected_at).toLocaleDateString()}</p>\r\n                  </div>\r\n                  {conflict.resolution_notes && (\r\n                    <div className=\"resolution-notes\">\r\n                      <p><strong>Resolution Notes:</strong> {conflict.resolution_notes}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {showDistributeModal && (\r\n        <PolicyDistributeModal \r\n          onClose={() => setShowDistributeModal(false)}\r\n          onDistribute={handleDistributePolicy}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PolicyDistributeModal = ({ onClose, onDistribute }) => {\r\n  const [selectedPolicyId, setSelectedPolicyId] = useState('');\r\n  const [selectedAgencyIds, setSelectedAgencyIds] = useState([]);\r\n  const [policies, setPolicies] = useState([]);\r\n  const [agencies, setAgencies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Mock data - in real app, fetch from API\r\n    setPolicies([\r\n      { id: '1', name: 'Data Privacy Policy', description: 'GDPR compliance requirements' },\r\n      { id: '2', name: 'FDA Compliance Policy', description: 'FDA regulatory requirements' },\r\n      { id: '3', name: 'AI Ethics Policy', description: 'AI ethics and bias prevention' }\r\n    ]);\r\n    \r\n    setAgencies([\r\n      { id: '1', name: 'Digital Marketing Agency A' },\r\n      { id: '2', name: 'Creative Agency B' },\r\n      { id: '3', name: 'Media Agency C' }\r\n    ]);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (selectedPolicyId && selectedAgencyIds.length > 0) {\r\n      onDistribute(selectedPolicyId, selectedAgencyIds);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <div className=\"modal-header\">\r\n          <h2>Distribute Policy</h2>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Select Policy:</label>\r\n            <select \r\n              value={selectedPolicyId} \r\n              onChange={(e) => setSelectedPolicyId(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Choose a policy...</option>\r\n              {policies.map(policy => (\r\n                <option key={policy.id} value={policy.id}>\r\n                  {policy.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label>Select Agencies:</label>\r\n            <div className=\"checkbox-group\">\r\n              {agencies.map(agency => (\r\n                <label key={agency.id} className=\"checkbox-label\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={agency.id}\r\n                    checked={selectedAgencyIds.includes(agency.id)}\r\n                    onChange={(e) => {\r\n                      if (e.target.checked) {\r\n                        setSelectedAgencyIds([...selectedAgencyIds, agency.id]);\r\n                      } else {\r\n                        setSelectedAgencyIds(selectedAgencyIds.filter(id => id !== agency.id));\r\n                      }\r\n                    }}\r\n                  />\r\n                  {agency.name}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"modal-actions\">\r\n            <button type=\"button\" className=\"btn-secondary\" onClick={onClose}>\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className=\"btn-primary\">\r\n              Distribute Policy\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PolicyDistributionDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}