{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const UserContext=/*#__PURE__*/createContext();export const useUser=()=>{const context=useContext(UserContext);if(!context){throw new Error('useUser must be used within a UserProvider');}return context;};export const UserProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[role,setRole]=useState('enterprise');const[workflow,setWorkflow]=useState(null);const[permissions,setPermissions]=useState([]);const[organizations,setOrganizations]=useState([]);const[currentOrganization,setCurrentOrganization]=useState(null);useEffect(()=>{// Initialize user context\nconst initializeUser=async()=>{try{// Mock user data - in real app, this would come from Auth0 or similar\nconst mockUser={id:'user_123',email:'admin@aicomplyr.io',name:'Enterprise Admin',role:'enterprise',permissions:['audit:read','policy:write','user:read','org:read','system:admin','review_overrides','agency:invite','policy:read'],organizations:[{id:'org_456',name:'PharmaCorp Inc.',type:'enterprise',role:'admin'}]};setUser(mockUser);setRole(mockUser.role);setPermissions(mockUser.permissions);setOrganizations(mockUser.organizations);setCurrentOrganization(mockUser.organizations[0]);console.log('👤 User context initialized:',mockUser);}catch(error){console.error('❌ Error initializing user context:',error);}};initializeUser();},[]);const hasPermission=permission=>{return permissions.includes(permission);};const hasRole=userRole=>{return role===userRole;};const switchOrganization=orgId=>{const org=organizations.find(o=>o.id===orgId);if(org){setCurrentOrganization(org);console.log(`🏢 Switched to organization: ${org.name}`);}};const updateWorkflow=workflowData=>{setWorkflow(workflowData);console.log('🔄 Workflow updated:',workflowData);};const clearWorkflow=()=>{setWorkflow(null);console.log('🔄 Workflow cleared');};const value={user,role,setRole,workflow,setWorkflow:updateWorkflow,clearWorkflow,permissions,organizations,currentOrganization,switchOrganization,hasPermission,hasRole};return/*#__PURE__*/_jsx(UserContext.Provider,{value:value,children:children});};export{UserContext};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UserContext","useUser","context","Error","UserProvider","_ref","children","user","setUser","role","setRole","workflow","setWorkflow","permissions","setPermissions","organizations","setOrganizations","currentOrganization","setCurrentOrganization","initializeUser","mockUser","id","email","name","type","console","log","error","hasPermission","permission","includes","hasRole","userRole","switchOrganization","orgId","org","find","o","updateWorkflow","workflowData","clearWorkflow","value","Provider"],"sources":["C:/Users/dgtow/intelligent-policy-engine/aicomplyr-intelligence/ui/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n  if (!context) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [role, setRole] = useState('enterprise');\r\n  const [workflow, setWorkflow] = useState(null);\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [organizations, setOrganizations] = useState([]);\r\n  const [currentOrganization, setCurrentOrganization] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize user context\r\n    const initializeUser = async () => {\r\n      try {\r\n        // Mock user data - in real app, this would come from Auth0 or similar\r\n        const mockUser = {\r\n          id: 'user_123',\r\n          email: 'admin@aicomplyr.io',\r\n          name: 'Enterprise Admin',\r\n          role: 'enterprise',\r\n          permissions: [\r\n            'audit:read',\r\n            'policy:write',\r\n            'user:read',\r\n            'org:read',\r\n            'system:admin',\r\n            'review_overrides',\r\n            'agency:invite',\r\n            'policy:read'\r\n          ],\r\n          organizations: [\r\n            {\r\n              id: 'org_456',\r\n              name: 'PharmaCorp Inc.',\r\n              type: 'enterprise',\r\n              role: 'admin'\r\n            }\r\n          ]\r\n        };\r\n\r\n        setUser(mockUser);\r\n        setRole(mockUser.role);\r\n        setPermissions(mockUser.permissions);\r\n        setOrganizations(mockUser.organizations);\r\n        setCurrentOrganization(mockUser.organizations[0]);\r\n\r\n        console.log('👤 User context initialized:', mockUser);\r\n      } catch (error) {\r\n        console.error('❌ Error initializing user context:', error);\r\n      }\r\n    };\r\n\r\n    initializeUser();\r\n  }, []);\r\n\r\n  const hasPermission = (permission) => {\r\n    return permissions.includes(permission);\r\n  };\r\n\r\n  const hasRole = (userRole) => {\r\n    return role === userRole;\r\n  };\r\n\r\n  const switchOrganization = (orgId) => {\r\n    const org = organizations.find(o => o.id === orgId);\r\n    if (org) {\r\n      setCurrentOrganization(org);\r\n      console.log(`🏢 Switched to organization: ${org.name}`);\r\n    }\r\n  };\r\n\r\n  const updateWorkflow = (workflowData) => {\r\n    setWorkflow(workflowData);\r\n    console.log('🔄 Workflow updated:', workflowData);\r\n  };\r\n\r\n  const clearWorkflow = () => {\r\n    setWorkflow(null);\r\n    console.log('🔄 Workflow cleared');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    role,\r\n    setRole,\r\n    workflow,\r\n    setWorkflow: updateWorkflow,\r\n    clearWorkflow,\r\n    permissions,\r\n    organizations,\r\n    currentOrganization,\r\n    switchOrganization,\r\n    hasPermission,\r\n    hasRole\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContext }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}