{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./NotificationCenter.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationCenter=_ref=>{let{notifications=[]}=_ref;const[isOpen,setIsOpen]=useState(false);const[unreadCount,setUnreadCount]=useState(0);useEffect(()=>{// Count unread notifications\nconst unread=notifications.filter(n=>!n.read).length;setUnreadCount(unread);},[notifications]);const handleNotificationClick=notification=>{// Mark as read\nnotification.read=true;console.log('📧 Notification clicked:',notification);};const markAllAsRead=()=>{notifications.forEach(n=>n.read=true);setUnreadCount(0);console.log('📧 Marked all notifications as read');};const getNotificationIcon=type=>{switch(type){case'success':return'✅';case'warning':return'⚠️';case'error':return'❌';case'info':return'ℹ️';case'workflow':return'🔄';case'agent':return'🤖';default:return'📧';}};const getNotificationColor=type=>{switch(type){case'success':return'var(--accent-green)';case'warning':return'var(--accent-orange)';case'error':return'var(--accent-red)';case'info':return'var(--primary-blue)';case'workflow':return'var(--accent-purple)';case'agent':return'var(--secondary-blue)';default:return'var(--gray-500)';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"notification-center\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"notification-bell\",onClick:()=>setIsOpen(!isOpen),children:[/*#__PURE__*/_jsx(\"span\",{className:\"bell-icon\",children:\"\\uD83D\\uDD14\"}),unreadCount>0&&/*#__PURE__*/_jsx(\"span\",{className:\"notification-badge\",children:unreadCount})]}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"notification-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notification-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"notification-title\",children:\"Notifications\"}),unreadCount>0&&/*#__PURE__*/_jsx(\"button\",{className:\"mark-all-read\",onClick:markAllAsRead,children:\"Mark all read\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"notification-list\",children:notifications.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-notifications\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"no-notifications-icon\",children:\"\\uD83D\\uDCED\"}),/*#__PURE__*/_jsx(\"p\",{className:\"no-notifications-text\",children:\"No notifications\"})]}):notifications.map((notification,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`notification-item ${!notification.read?'unread':''}`,onClick:()=>handleNotificationClick(notification),children:[/*#__PURE__*/_jsx(\"div\",{className:\"notification-icon\",style:{color:getNotificationColor(notification.type)},children:getNotificationIcon(notification.type)}),/*#__PURE__*/_jsxs(\"div\",{className:\"notification-content\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"notification-title\",children:notification.title}),/*#__PURE__*/_jsx(\"p\",{className:\"notification-message\",children:notification.message}),/*#__PURE__*/_jsx(\"span\",{className:\"notification-time\",children:notification.timestamp?new Date(notification.timestamp).toLocaleTimeString():'Just now'})]}),!notification.read&&/*#__PURE__*/_jsx(\"div\",{className:\"unread-indicator\"})]},notification.id||index))}),notifications.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"notification-footer\",children:/*#__PURE__*/_jsx(\"button\",{className:\"view-all-notifications\",children:\"View All Notifications\"})})]})]});};export default NotificationCenter;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","NotificationCenter","_ref","notifications","isOpen","setIsOpen","unreadCount","setUnreadCount","unread","filter","n","read","length","handleNotificationClick","notification","console","log","markAllAsRead","forEach","getNotificationIcon","type","getNotificationColor","className","children","onClick","map","index","style","color","title","message","timestamp","Date","toLocaleTimeString","id"],"sources":["C:/Users/dgtow/intelligent-policy-engine/aicomplyr-intelligence/ui/src/components/NotificationCenter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './NotificationCenter.css';\r\n\r\nconst NotificationCenter = ({ notifications = [] }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Count unread notifications\r\n    const unread = notifications.filter(n => !n.read).length;\r\n    setUnreadCount(unread);\r\n  }, [notifications]);\r\n\r\n  const handleNotificationClick = (notification) => {\r\n    // Mark as read\r\n    notification.read = true;\r\n    console.log('📧 Notification clicked:', notification);\r\n  };\r\n\r\n  const markAllAsRead = () => {\r\n    notifications.forEach(n => n.read = true);\r\n    setUnreadCount(0);\r\n    console.log('📧 Marked all notifications as read');\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'success': return '✅';\r\n      case 'warning': return '⚠️';\r\n      case 'error': return '❌';\r\n      case 'info': return 'ℹ️';\r\n      case 'workflow': return '🔄';\r\n      case 'agent': return '🤖';\r\n      default: return '📧';\r\n    }\r\n  };\r\n\r\n  const getNotificationColor = (type) => {\r\n    switch (type) {\r\n      case 'success': return 'var(--accent-green)';\r\n      case 'warning': return 'var(--accent-orange)';\r\n      case 'error': return 'var(--accent-red)';\r\n      case 'info': return 'var(--primary-blue)';\r\n      case 'workflow': return 'var(--accent-purple)';\r\n      case 'agent': return 'var(--secondary-blue)';\r\n      default: return 'var(--gray-500)';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-center\">\r\n      {/* Notification Bell */}\r\n      <button \r\n        className=\"notification-bell\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span className=\"bell-icon\">🔔</span>\r\n        {unreadCount > 0 && (\r\n          <span className=\"notification-badge\">{unreadCount}</span>\r\n        )}\r\n      </button>\r\n\r\n      {/* Notification Panel */}\r\n      {isOpen && (\r\n        <div className=\"notification-panel\">\r\n          <div className=\"notification-header\">\r\n            <h3 className=\"notification-title\">Notifications</h3>\r\n            {unreadCount > 0 && (\r\n              <button \r\n                className=\"mark-all-read\"\r\n                onClick={markAllAsRead}\r\n              >\r\n                Mark all read\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"notification-list\">\r\n            {notifications.length === 0 ? (\r\n              <div className=\"no-notifications\">\r\n                <span className=\"no-notifications-icon\">📭</span>\r\n                <p className=\"no-notifications-text\">No notifications</p>\r\n              </div>\r\n            ) : (\r\n              notifications.map((notification, index) => (\r\n                <div\r\n                  key={notification.id || index}\r\n                  className={`notification-item ${!notification.read ? 'unread' : ''}`}\r\n                  onClick={() => handleNotificationClick(notification)}\r\n                >\r\n                  <div \r\n                    className=\"notification-icon\"\r\n                    style={{ color: getNotificationColor(notification.type) }}\r\n                  >\r\n                    {getNotificationIcon(notification.type)}\r\n                  </div>\r\n                  \r\n                  <div className=\"notification-content\">\r\n                    <h4 className=\"notification-title\">{notification.title}</h4>\r\n                    <p className=\"notification-message\">{notification.message}</p>\r\n                    <span className=\"notification-time\">\r\n                      {notification.timestamp ? \r\n                        new Date(notification.timestamp).toLocaleTimeString() : \r\n                        'Just now'\r\n                      }\r\n                    </span>\r\n                  </div>\r\n\r\n                  {!notification.read && (\r\n                    <div className=\"unread-indicator\"></div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {notifications.length > 0 && (\r\n            <div className=\"notification-footer\">\r\n              <button className=\"view-all-notifications\">\r\n                View All Notifications\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationCenter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}